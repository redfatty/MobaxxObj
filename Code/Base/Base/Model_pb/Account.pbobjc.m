// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: account.proto

#import "GPBProtocolBuffers_RuntimeSupport.h"
#import "Account.pbobjc.h"
// @@protoc_insertion_point(imports)

#pragma mark - AccountRoot

@implementation AccountRoot

@end

#pragma mark - AccountRoot_FileDescriptor

static GPBFileDescriptor *AccountRoot_FileDescriptor(void) {
  // This is called by +initialize so there is no need to worry
  // about thread safety of the singleton.
  static GPBFileDescriptor *descriptor = NULL;
  if (!descriptor) {
    GPBDebugCheckRuntimeVersion();
    descriptor = [[GPBFileDescriptor alloc] initWithPackage:@"common"
                                                     syntax:GPBFileSyntaxProto3];
  }
  return descriptor;
}

#pragma mark - Enum ELevelType

GPBEnumDescriptor *ELevelType_EnumDescriptor(void) {
  static GPBEnumDescriptor *descriptor = NULL;
  if (!descriptor) {
    static GPBMessageEnumValueDescription values[] = {
      { .name = "User", .number = ELevelType_User },
      { .name = "Vip", .number = ELevelType_Vip },
      { .name = "Vipp", .number = ELevelType_Vipp },
      { .name = "Vo", .number = ELevelType_Vo },
      { .name = "Tourist", .number = ELevelType_Tourist },
    };
    static const char *extraTextFormatInfo = "\005\000\004\000\001\003\000\002\004\000\003\002\000\004\007\000";
    descriptor = [GPBEnumDescriptor allocDescriptorForName:GPBNSStringifySymbol(ELevelType)
                                                   values:values
                                               valueCount:sizeof(values) / sizeof(GPBMessageEnumValueDescription)
                                             enumVerifier:ELevelType_IsValidValue
                                      extraTextFormatInfo:extraTextFormatInfo];
  }
  return descriptor;
}

BOOL ELevelType_IsValidValue(int32_t value__) {
  switch (value__) {
    case ELevelType_User:
    case ELevelType_Vip:
    case ELevelType_Vipp:
    case ELevelType_Vo:
    case ELevelType_Tourist:
      return YES;
    default:
      return NO;
  }
}

#pragma mark - Enum ERightId

GPBEnumDescriptor *ERightId_EnumDescriptor(void) {
  static GPBEnumDescriptor *descriptor = NULL;
  if (!descriptor) {
    static GPBMessageEnumValueDescription values[] = {
      { .name = "WeiboShowLeftCatalog", .number = ERightId_WeiboShowLeftCatalog },
      { .name = "WeiboShowTopDropdown", .number = ERightId_WeiboShowTopDropdown },
      { .name = "WeiboShowIcon", .number = ERightId_WeiboShowIcon },
      { .name = "WeiboShowComment", .number = ERightId_WeiboShowComment },
      { .name = "WeiboShowCollect", .number = ERightId_WeiboShowCollect },
      { .name = "WeiboShowMore", .number = ERightId_WeiboShowMore },
      { .name = "WeiboShowViewDetails", .number = ERightId_WeiboShowViewDetails },
      { .name = "WeiboCommentText", .number = ERightId_WeiboCommentText },
      { .name = "WeiboCommentAudio", .number = ERightId_WeiboCommentAudio },
      { .name = "WeiboPostText", .number = ERightId_WeiboPostText },
      { .name = "WeiboPostImage", .number = ERightId_WeiboPostImage },
      { .name = "WeiboPostVideo", .number = ERightId_WeiboPostVideo },
      { .name = "WeiboPostAudio", .number = ERightId_WeiboPostAudio },
      { .name = "PersonalRecordExternalLinks", .number = ERightId_PersonalRecordExternalLinks },
      { .name = "PersonalRecordIcon", .number = ERightId_PersonalRecordIcon },
      { .name = "PersonalRecordCommunity", .number = ERightId_PersonalRecordCommunity },
      { .name = "PersonalRecordVideoClassifyPage", .number = ERightId_PersonalRecordVideoClassifyPage },
      { .name = "PersonalRecordAudioClassifyPage", .number = ERightId_PersonalRecordAudioClassifyPage },
      { .name = "FriendSystemRecommend", .number = ERightId_FriendSystemRecommend },
      { .name = "FriendSystemSearch", .number = ERightId_FriendSystemSearch },
      { .name = "FriendSystemFriendApplyFor", .number = ERightId_FriendSystemFriendApplyFor },
      { .name = "FriendSystemAddressBook", .number = ERightId_FriendSystemAddressBook },
      { .name = "FriendSystemFriend", .number = ERightId_FriendSystemFriend },
      { .name = "FriendSystemMyApplyFor", .number = ERightId_FriendSystemMyApplyFor },
      { .name = "RealName", .number = ERightId_RealName },
    };
    static const char *extraTextFormatInfo = "\031\000%\244\244\247\000\001%\244\243\250\000\002%\244\244\000\003%\244\247\000\004%\244\247\000\005%\244\244\000\006%\244\244\247\000\007%\247\244\000\010%\247\245\000\t%\244\244\000\n%\244\245\000\013%\244\245\000\014%\244\245\000\r(\246\250\245\000\016(\246\244\000\017(\246\251\000\020(\246\245\250\244\000\021(\246\245\250\244\000\022&\246\251\000\023&\246\246\000\024&\246\246\245\243\000\025&\246\247\244\000\026&\246\246\000\027&\246\242\245\243\000\030$\244\000";
    descriptor = [GPBEnumDescriptor allocDescriptorForName:GPBNSStringifySymbol(ERightId)
                                                   values:values
                                               valueCount:sizeof(values) / sizeof(GPBMessageEnumValueDescription)
                                             enumVerifier:ERightId_IsValidValue
                                      extraTextFormatInfo:extraTextFormatInfo];
  }
  return descriptor;
}

BOOL ERightId_IsValidValue(int32_t value__) {
  switch (value__) {
    case ERightId_WeiboShowLeftCatalog:
    case ERightId_WeiboShowTopDropdown:
    case ERightId_WeiboShowIcon:
    case ERightId_WeiboShowComment:
    case ERightId_WeiboShowCollect:
    case ERightId_WeiboShowMore:
    case ERightId_WeiboShowViewDetails:
    case ERightId_WeiboCommentText:
    case ERightId_WeiboCommentAudio:
    case ERightId_WeiboPostText:
    case ERightId_WeiboPostImage:
    case ERightId_WeiboPostVideo:
    case ERightId_WeiboPostAudio:
    case ERightId_PersonalRecordExternalLinks:
    case ERightId_PersonalRecordIcon:
    case ERightId_PersonalRecordCommunity:
    case ERightId_PersonalRecordVideoClassifyPage:
    case ERightId_PersonalRecordAudioClassifyPage:
    case ERightId_FriendSystemRecommend:
    case ERightId_FriendSystemSearch:
    case ERightId_FriendSystemFriendApplyFor:
    case ERightId_FriendSystemAddressBook:
    case ERightId_FriendSystemFriend:
    case ERightId_FriendSystemMyApplyFor:
    case ERightId_RealName:
      return YES;
    default:
      return NO;
  }
}

#pragma mark - Enum ELinkType

GPBEnumDescriptor *ELinkType_EnumDescriptor(void) {
  static GPBEnumDescriptor *descriptor = NULL;
  if (!descriptor) {
    static GPBMessageEnumValueDescription values[] = {
      { .name = "Taobao", .number = ELinkType_Taobao },
      { .name = "Jd", .number = ELinkType_Jd },
      { .name = "Yy", .number = ELinkType_Yy },
      { .name = "Huya", .number = ELinkType_Huya },
      { .name = "Douyu", .number = ELinkType_Douyu },
      { .name = "Panda", .number = ELinkType_Panda },
      { .name = "Zhanqi", .number = ELinkType_Zhanqi },
      { .name = "Quanmin", .number = ELinkType_Quanmin },
      { .name = "Weibo", .number = ELinkType_Weibo },
      { .name = "Qzone", .number = ELinkType_Qzone },
    };
    static const char *extraTextFormatInfo = "\n\000&\000\001\"\000\002\"\000\003$\000\004%\000\005%\000\006&\000\007\'\000\010%\000\t%\000";
    descriptor = [GPBEnumDescriptor allocDescriptorForName:GPBNSStringifySymbol(ELinkType)
                                                   values:values
                                               valueCount:sizeof(values) / sizeof(GPBMessageEnumValueDescription)
                                             enumVerifier:ELinkType_IsValidValue
                                      extraTextFormatInfo:extraTextFormatInfo];
  }
  return descriptor;
}

BOOL ELinkType_IsValidValue(int32_t value__) {
  switch (value__) {
    case ELinkType_Taobao:
    case ELinkType_Jd:
    case ELinkType_Yy:
    case ELinkType_Huya:
    case ELinkType_Douyu:
    case ELinkType_Panda:
    case ELinkType_Zhanqi:
    case ELinkType_Quanmin:
    case ELinkType_Weibo:
    case ELinkType_Qzone:
      return YES;
    default:
      return NO;
  }
}

#pragma mark - PUserList

@implementation PUserList

@dynamic listArray, listArray_Count;

typedef struct PUserList__storage_ {
  uint32_t _has_storage_[1];
  NSMutableArray *listArray;
} PUserList__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "listArray",
        .number = PUserList_FieldNumber_ListArray,
        .hasIndex = GPBNoHasBit,
        .flags = GPBFieldRepeated,
        .dataType = GPBDataTypeMessage,
        .offset = offsetof(PUserList__storage_, listArray),
        .defaultValue.valueMessage = nil,
        .dataTypeSpecific.className = GPBStringifySymbol(PUser),
        .fieldOptions = NULL,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[PUserList class]
                                     rootClass:[AccountRoot class]
                                          file:AccountRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:sizeof(fields) / sizeof(GPBMessageFieldDescription)
                                        oneofs:NULL
                                    oneofCount:0
                                         enums:NULL
                                     enumCount:0
                                        ranges:NULL
                                    rangeCount:0
                                   storageSize:sizeof(PUserList__storage_)
                                    wireFormat:NO];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - PLiveInfo

@implementation PLiveInfo

@dynamic website;
@dynamic uRL;

typedef struct PLiveInfo__storage_ {
  uint32_t _has_storage_[1];
  NSString *website;
  NSString *uRL;
} PLiveInfo__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "website",
        .number = PLiveInfo_FieldNumber_Website,
        .hasIndex = 0,
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
        .offset = offsetof(PLiveInfo__storage_, website),
        .defaultValue.valueString = nil,
        .dataTypeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "uRL",
        .number = PLiveInfo_FieldNumber_URL,
        .hasIndex = 1,
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
        .offset = offsetof(PLiveInfo__storage_, uRL),
        .defaultValue.valueString = nil,
        .dataTypeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
    };
#if GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    const char *extraTextFormatInfo = NULL;
#else
    static const char *extraTextFormatInfo = "\001\002\001!!\000";
#endif  // GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[PLiveInfo class]
                                     rootClass:[AccountRoot class]
                                          file:AccountRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:sizeof(fields) / sizeof(GPBMessageFieldDescription)
                                        oneofs:NULL
                                    oneofCount:0
                                         enums:NULL
                                     enumCount:0
                                        ranges:NULL
                                    rangeCount:0
                                   storageSize:sizeof(PLiveInfo__storage_)
                                    wireFormat:NO
                           extraTextFormatInfo:extraTextFormatInfo];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - PLiveInfoList

@implementation PLiveInfoList

@dynamic listArray, listArray_Count;

typedef struct PLiveInfoList__storage_ {
  uint32_t _has_storage_[1];
  NSMutableArray *listArray;
} PLiveInfoList__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "listArray",
        .number = PLiveInfoList_FieldNumber_ListArray,
        .hasIndex = GPBNoHasBit,
        .flags = GPBFieldRepeated,
        .dataType = GPBDataTypeMessage,
        .offset = offsetof(PLiveInfoList__storage_, listArray),
        .defaultValue.valueMessage = nil,
        .dataTypeSpecific.className = GPBStringifySymbol(PLiveInfo),
        .fieldOptions = NULL,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[PLiveInfoList class]
                                     rootClass:[AccountRoot class]
                                          file:AccountRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:sizeof(fields) / sizeof(GPBMessageFieldDescription)
                                        oneofs:NULL
                                    oneofCount:0
                                         enums:NULL
                                     enumCount:0
                                        ranges:NULL
                                    rangeCount:0
                                   storageSize:sizeof(PLiveInfoList__storage_)
                                    wireFormat:NO];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - PUser

@implementation PUser

@dynamic uuid;
@dynamic password;
@dynamic username;
@dynamic nickname;
@dynamic headImgURL;
@dynamic realname;
@dynamic gender;
@dynamic email;
@dynamic birthday;
@dynamic cellphone;
@dynamic timeZone;
@dynamic locale;
@dynamic membershipLevel;
@dynamic lastUpdateTime;
@dynamic lastLoginTime;
@dynamic userResume;
@dynamic link1;
@dynamic link2;
@dynamic link3;
@dynamic chatId;
@dynamic hasLevelInfo, levelInfo;
@dynamic disable;
@dynamic isAi;
@dynamic forceChangePwd;
@dynamic areaCode;
@dynamic areaName;
@dynamic liveRemind;
@dynamic hasLiveInfo, liveInfo;
@dynamic thumbBackImage;
@dynamic bigBackImage;
@dynamic isFollowing;

typedef struct PUser__storage_ {
  uint32_t _has_storage_[1];
  BOOL disable;
  BOOL isAi;
  BOOL forceChangePwd;
  BOOL liveRemind;
  BOOL isFollowing;
  int32_t gender;
  int32_t timeZone;
  int32_t membershipLevel;
  NSString *uuid;
  NSString *password;
  NSString *username;
  NSString *nickname;
  NSString *headImgURL;
  NSString *realname;
  NSString *email;
  NSString *birthday;
  NSString *cellphone;
  NSString *locale;
  NSString *userResume;
  NSString *link1;
  NSString *link2;
  NSString *link3;
  PLevelInfo *levelInfo;
  NSString *areaCode;
  NSString *areaName;
  PLiveInfoList *liveInfo;
  NSString *thumbBackImage;
  NSString *bigBackImage;
  int64_t lastUpdateTime;
  int64_t lastLoginTime;
  int64_t chatId;
} PUser__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "uuid",
        .number = PUser_FieldNumber_Uuid,
        .hasIndex = 0,
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
        .offset = offsetof(PUser__storage_, uuid),
        .defaultValue.valueString = nil,
        .dataTypeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "password",
        .number = PUser_FieldNumber_Password,
        .hasIndex = 1,
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
        .offset = offsetof(PUser__storage_, password),
        .defaultValue.valueString = nil,
        .dataTypeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "username",
        .number = PUser_FieldNumber_Username,
        .hasIndex = 2,
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
        .offset = offsetof(PUser__storage_, username),
        .defaultValue.valueString = nil,
        .dataTypeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "nickname",
        .number = PUser_FieldNumber_Nickname,
        .hasIndex = 3,
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
        .offset = offsetof(PUser__storage_, nickname),
        .defaultValue.valueString = nil,
        .dataTypeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "headImgURL",
        .number = PUser_FieldNumber_HeadImgURL,
        .hasIndex = 4,
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
        .offset = offsetof(PUser__storage_, headImgURL),
        .defaultValue.valueString = nil,
        .dataTypeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "realname",
        .number = PUser_FieldNumber_Realname,
        .hasIndex = 5,
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
        .offset = offsetof(PUser__storage_, realname),
        .defaultValue.valueString = nil,
        .dataTypeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "gender",
        .number = PUser_FieldNumber_Gender,
        .hasIndex = 6,
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt32,
        .offset = offsetof(PUser__storage_, gender),
        .defaultValue.valueInt32 = 0,
        .dataTypeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "email",
        .number = PUser_FieldNumber_Email,
        .hasIndex = 7,
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
        .offset = offsetof(PUser__storage_, email),
        .defaultValue.valueString = nil,
        .dataTypeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "birthday",
        .number = PUser_FieldNumber_Birthday,
        .hasIndex = 8,
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
        .offset = offsetof(PUser__storage_, birthday),
        .defaultValue.valueString = nil,
        .dataTypeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "cellphone",
        .number = PUser_FieldNumber_Cellphone,
        .hasIndex = 9,
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
        .offset = offsetof(PUser__storage_, cellphone),
        .defaultValue.valueString = nil,
        .dataTypeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "timeZone",
        .number = PUser_FieldNumber_TimeZone,
        .hasIndex = 10,
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeInt32,
        .offset = offsetof(PUser__storage_, timeZone),
        .defaultValue.valueInt32 = 0,
        .dataTypeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "locale",
        .number = PUser_FieldNumber_Locale,
        .hasIndex = 11,
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
        .offset = offsetof(PUser__storage_, locale),
        .defaultValue.valueString = nil,
        .dataTypeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "membershipLevel",
        .number = PUser_FieldNumber_MembershipLevel,
        .hasIndex = 12,
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeInt32,
        .offset = offsetof(PUser__storage_, membershipLevel),
        .defaultValue.valueInt32 = 0,
        .dataTypeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "lastUpdateTime",
        .number = PUser_FieldNumber_LastUpdateTime,
        .hasIndex = 13,
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeInt64,
        .offset = offsetof(PUser__storage_, lastUpdateTime),
        .defaultValue.valueInt64 = 0LL,
        .dataTypeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "lastLoginTime",
        .number = PUser_FieldNumber_LastLoginTime,
        .hasIndex = 14,
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeInt64,
        .offset = offsetof(PUser__storage_, lastLoginTime),
        .defaultValue.valueInt64 = 0LL,
        .dataTypeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "userResume",
        .number = PUser_FieldNumber_UserResume,
        .hasIndex = 15,
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
        .offset = offsetof(PUser__storage_, userResume),
        .defaultValue.valueString = nil,
        .dataTypeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "link1",
        .number = PUser_FieldNumber_Link1,
        .hasIndex = 16,
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
        .offset = offsetof(PUser__storage_, link1),
        .defaultValue.valueString = nil,
        .dataTypeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "link2",
        .number = PUser_FieldNumber_Link2,
        .hasIndex = 17,
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
        .offset = offsetof(PUser__storage_, link2),
        .defaultValue.valueString = nil,
        .dataTypeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "link3",
        .number = PUser_FieldNumber_Link3,
        .hasIndex = 18,
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
        .offset = offsetof(PUser__storage_, link3),
        .defaultValue.valueString = nil,
        .dataTypeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "chatId",
        .number = PUser_FieldNumber_ChatId,
        .hasIndex = 19,
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeInt64,
        .offset = offsetof(PUser__storage_, chatId),
        .defaultValue.valueInt64 = 0LL,
        .dataTypeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "levelInfo",
        .number = PUser_FieldNumber_LevelInfo,
        .hasIndex = 20,
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeMessage,
        .offset = offsetof(PUser__storage_, levelInfo),
        .defaultValue.valueMessage = nil,
        .dataTypeSpecific.className = GPBStringifySymbol(PLevelInfo),
        .fieldOptions = NULL,
      },
      {
        .name = "disable",
        .number = PUser_FieldNumber_Disable,
        .hasIndex = 21,
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeBool,
        .offset = offsetof(PUser__storage_, disable),
        .defaultValue.valueBool = NO,
        .dataTypeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "isAi",
        .number = PUser_FieldNumber_IsAi,
        .hasIndex = 22,
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeBool,
        .offset = offsetof(PUser__storage_, isAi),
        .defaultValue.valueBool = NO,
        .dataTypeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "forceChangePwd",
        .number = PUser_FieldNumber_ForceChangePwd,
        .hasIndex = 23,
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeBool,
        .offset = offsetof(PUser__storage_, forceChangePwd),
        .defaultValue.valueBool = NO,
        .dataTypeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "areaCode",
        .number = PUser_FieldNumber_AreaCode,
        .hasIndex = 24,
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
        .offset = offsetof(PUser__storage_, areaCode),
        .defaultValue.valueString = nil,
        .dataTypeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "areaName",
        .number = PUser_FieldNumber_AreaName,
        .hasIndex = 25,
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
        .offset = offsetof(PUser__storage_, areaName),
        .defaultValue.valueString = nil,
        .dataTypeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "liveRemind",
        .number = PUser_FieldNumber_LiveRemind,
        .hasIndex = 26,
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeBool,
        .offset = offsetof(PUser__storage_, liveRemind),
        .defaultValue.valueBool = NO,
        .dataTypeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "liveInfo",
        .number = PUser_FieldNumber_LiveInfo,
        .hasIndex = 27,
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeMessage,
        .offset = offsetof(PUser__storage_, liveInfo),
        .defaultValue.valueMessage = nil,
        .dataTypeSpecific.className = GPBStringifySymbol(PLiveInfoList),
        .fieldOptions = NULL,
      },
      {
        .name = "thumbBackImage",
        .number = PUser_FieldNumber_ThumbBackImage,
        .hasIndex = 28,
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
        .offset = offsetof(PUser__storage_, thumbBackImage),
        .defaultValue.valueString = nil,
        .dataTypeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "bigBackImage",
        .number = PUser_FieldNumber_BigBackImage,
        .hasIndex = 29,
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
        .offset = offsetof(PUser__storage_, bigBackImage),
        .defaultValue.valueString = nil,
        .dataTypeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "isFollowing",
        .number = PUser_FieldNumber_IsFollowing,
        .hasIndex = 30,
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeBool,
        .offset = offsetof(PUser__storage_, isFollowing),
        .defaultValue.valueBool = NO,
        .dataTypeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
    };
#if GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    const char *extraTextFormatInfo = NULL;
#else
    static const char *extraTextFormatInfo = "\021\n\n\000\020\010\000\022\017\000\023\016\000\024\r\000\025\n\000\031\006\000\032\t\000\034\003A\000\035\016\000\036\010\000\037\010\000 \n\000!\010\000\"\016\000#\014\000$\013\000";
#endif  // GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[PUser class]
                                     rootClass:[AccountRoot class]
                                          file:AccountRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:sizeof(fields) / sizeof(GPBMessageFieldDescription)
                                        oneofs:NULL
                                    oneofCount:0
                                         enums:NULL
                                     enumCount:0
                                        ranges:NULL
                                    rangeCount:0
                                   storageSize:sizeof(PUser__storage_)
                                    wireFormat:NO
                           extraTextFormatInfo:extraTextFormatInfo];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - PUserListEx

@implementation PUserListEx

@dynamic listArray, listArray_Count;

typedef struct PUserListEx__storage_ {
  uint32_t _has_storage_[1];
  NSMutableArray *listArray;
} PUserListEx__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "listArray",
        .number = PUserListEx_FieldNumber_ListArray,
        .hasIndex = GPBNoHasBit,
        .flags = GPBFieldRepeated,
        .dataType = GPBDataTypeMessage,
        .offset = offsetof(PUserListEx__storage_, listArray),
        .defaultValue.valueMessage = nil,
        .dataTypeSpecific.className = GPBStringifySymbol(PUserEx),
        .fieldOptions = NULL,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[PUserListEx class]
                                     rootClass:[AccountRoot class]
                                          file:AccountRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:sizeof(fields) / sizeof(GPBMessageFieldDescription)
                                        oneofs:NULL
                                    oneofCount:0
                                         enums:NULL
                                     enumCount:0
                                        ranges:NULL
                                    rangeCount:0
                                   storageSize:sizeof(PUserListEx__storage_)
                                    wireFormat:NO];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - PUserEx

@implementation PUserEx

@dynamic uuid;
@dynamic project;
@dynamic username;
@dynamic password;
@dynamic nickname;
@dynamic realname;
@dynamic gender;
@dynamic birthday;
@dynamic email;
@dynamic cellphone;
@dynamic timeZone;
@dynamic headImgURL;
@dynamic locale;
@dynamic userResume;
@dynamic lastUpdateTime;
@dynamic lastLoginTime;
@dynamic userData, userData_Count;

typedef struct PUserEx__storage_ {
  uint32_t _has_storage_[1];
  int32_t gender;
  int32_t timeZone;
  NSString *uuid;
  NSString *project;
  NSString *username;
  NSString *password;
  NSString *nickname;
  NSString *realname;
  NSString *birthday;
  NSString *email;
  NSString *cellphone;
  NSString *headImgURL;
  NSString *locale;
  NSString *userResume;
  NSMutableDictionary *userData;
  int64_t lastUpdateTime;
  int64_t lastLoginTime;
} PUserEx__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "uuid",
        .number = PUserEx_FieldNumber_Uuid,
        .hasIndex = 0,
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
        .offset = offsetof(PUserEx__storage_, uuid),
        .defaultValue.valueString = nil,
        .dataTypeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "project",
        .number = PUserEx_FieldNumber_Project,
        .hasIndex = 1,
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
        .offset = offsetof(PUserEx__storage_, project),
        .defaultValue.valueString = nil,
        .dataTypeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "username",
        .number = PUserEx_FieldNumber_Username,
        .hasIndex = 2,
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
        .offset = offsetof(PUserEx__storage_, username),
        .defaultValue.valueString = nil,
        .dataTypeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "password",
        .number = PUserEx_FieldNumber_Password,
        .hasIndex = 3,
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
        .offset = offsetof(PUserEx__storage_, password),
        .defaultValue.valueString = nil,
        .dataTypeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "nickname",
        .number = PUserEx_FieldNumber_Nickname,
        .hasIndex = 4,
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
        .offset = offsetof(PUserEx__storage_, nickname),
        .defaultValue.valueString = nil,
        .dataTypeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "realname",
        .number = PUserEx_FieldNumber_Realname,
        .hasIndex = 5,
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
        .offset = offsetof(PUserEx__storage_, realname),
        .defaultValue.valueString = nil,
        .dataTypeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "gender",
        .number = PUserEx_FieldNumber_Gender,
        .hasIndex = 6,
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt32,
        .offset = offsetof(PUserEx__storage_, gender),
        .defaultValue.valueInt32 = 0,
        .dataTypeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "birthday",
        .number = PUserEx_FieldNumber_Birthday,
        .hasIndex = 7,
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
        .offset = offsetof(PUserEx__storage_, birthday),
        .defaultValue.valueString = nil,
        .dataTypeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "email",
        .number = PUserEx_FieldNumber_Email,
        .hasIndex = 8,
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
        .offset = offsetof(PUserEx__storage_, email),
        .defaultValue.valueString = nil,
        .dataTypeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "cellphone",
        .number = PUserEx_FieldNumber_Cellphone,
        .hasIndex = 9,
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
        .offset = offsetof(PUserEx__storage_, cellphone),
        .defaultValue.valueString = nil,
        .dataTypeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "timeZone",
        .number = PUserEx_FieldNumber_TimeZone,
        .hasIndex = 10,
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeInt32,
        .offset = offsetof(PUserEx__storage_, timeZone),
        .defaultValue.valueInt32 = 0,
        .dataTypeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "headImgURL",
        .number = PUserEx_FieldNumber_HeadImgURL,
        .hasIndex = 11,
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
        .offset = offsetof(PUserEx__storage_, headImgURL),
        .defaultValue.valueString = nil,
        .dataTypeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "locale",
        .number = PUserEx_FieldNumber_Locale,
        .hasIndex = 12,
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
        .offset = offsetof(PUserEx__storage_, locale),
        .defaultValue.valueString = nil,
        .dataTypeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "userResume",
        .number = PUserEx_FieldNumber_UserResume,
        .hasIndex = 13,
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
        .offset = offsetof(PUserEx__storage_, userResume),
        .defaultValue.valueString = nil,
        .dataTypeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "lastUpdateTime",
        .number = PUserEx_FieldNumber_LastUpdateTime,
        .hasIndex = 14,
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeInt64,
        .offset = offsetof(PUserEx__storage_, lastUpdateTime),
        .defaultValue.valueInt64 = 0LL,
        .dataTypeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "lastLoginTime",
        .number = PUserEx_FieldNumber_LastLoginTime,
        .hasIndex = 15,
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeInt64,
        .offset = offsetof(PUserEx__storage_, lastLoginTime),
        .defaultValue.valueInt64 = 0LL,
        .dataTypeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "userData",
        .number = PUserEx_FieldNumber_UserData,
        .hasIndex = GPBNoHasBit,
        .flags = GPBFieldMapKeyString | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
        .offset = offsetof(PUserEx__storage_, userData),
        .defaultValue.valueString = nil,
        .dataTypeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
    };
#if GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    const char *extraTextFormatInfo = NULL;
#else
    static const char *extraTextFormatInfo = "\006\020\010\000\021\n\000\023\n\000\024\016\000\025\r\000\026\010\000";
#endif  // GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[PUserEx class]
                                     rootClass:[AccountRoot class]
                                          file:AccountRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:sizeof(fields) / sizeof(GPBMessageFieldDescription)
                                        oneofs:NULL
                                    oneofCount:0
                                         enums:NULL
                                     enumCount:0
                                        ranges:NULL
                                    rangeCount:0
                                   storageSize:sizeof(PUserEx__storage_)
                                    wireFormat:NO
                           extraTextFormatInfo:extraTextFormatInfo];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - PUserBase

@implementation PUserBase

@dynamic level;
@dynamic uuid;
@dynamic userName;
@dynamic nickname;
@dynamic realName;
@dynamic headImgURL;
@dynamic userResume;

typedef struct PUserBase__storage_ {
  uint32_t _has_storage_[1];
  int32_t level;
  NSString *uuid;
  NSString *userName;
  NSString *nickname;
  NSString *realName;
  NSString *headImgURL;
  NSString *userResume;
} PUserBase__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "level",
        .number = PUserBase_FieldNumber_Level,
        .hasIndex = 0,
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeInt32,
        .offset = offsetof(PUserBase__storage_, level),
        .defaultValue.valueInt32 = 0,
        .dataTypeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "uuid",
        .number = PUserBase_FieldNumber_Uuid,
        .hasIndex = 1,
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
        .offset = offsetof(PUserBase__storage_, uuid),
        .defaultValue.valueString = nil,
        .dataTypeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "userName",
        .number = PUserBase_FieldNumber_UserName,
        .hasIndex = 2,
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
        .offset = offsetof(PUserBase__storage_, userName),
        .defaultValue.valueString = nil,
        .dataTypeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "nickname",
        .number = PUserBase_FieldNumber_Nickname,
        .hasIndex = 3,
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
        .offset = offsetof(PUserBase__storage_, nickname),
        .defaultValue.valueString = nil,
        .dataTypeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "realName",
        .number = PUserBase_FieldNumber_RealName,
        .hasIndex = 4,
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
        .offset = offsetof(PUserBase__storage_, realName),
        .defaultValue.valueString = nil,
        .dataTypeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "headImgURL",
        .number = PUserBase_FieldNumber_HeadImgURL,
        .hasIndex = 5,
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
        .offset = offsetof(PUserBase__storage_, headImgURL),
        .defaultValue.valueString = nil,
        .dataTypeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "userResume",
        .number = PUserBase_FieldNumber_UserResume,
        .hasIndex = 6,
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
        .offset = offsetof(PUserBase__storage_, userResume),
        .defaultValue.valueString = nil,
        .dataTypeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
    };
#if GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    const char *extraTextFormatInfo = NULL;
#else
    static const char *extraTextFormatInfo = "\007\002E\000\006d\000\007H\000\010H\000\tH\000\nJ\000\013J\000";
#endif  // GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[PUserBase class]
                                     rootClass:[AccountRoot class]
                                          file:AccountRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:sizeof(fields) / sizeof(GPBMessageFieldDescription)
                                        oneofs:NULL
                                    oneofCount:0
                                         enums:NULL
                                     enumCount:0
                                        ranges:NULL
                                    rangeCount:0
                                   storageSize:sizeof(PUserBase__storage_)
                                    wireFormat:NO
                           extraTextFormatInfo:extraTextFormatInfo];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - PUserBaseList

@implementation PUserBaseList

@dynamic listArray, listArray_Count;

typedef struct PUserBaseList__storage_ {
  uint32_t _has_storage_[1];
  NSMutableArray *listArray;
} PUserBaseList__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "listArray",
        .number = PUserBaseList_FieldNumber_ListArray,
        .hasIndex = GPBNoHasBit,
        .flags = GPBFieldRepeated,
        .dataType = GPBDataTypeMessage,
        .offset = offsetof(PUserBaseList__storage_, listArray),
        .defaultValue.valueMessage = nil,
        .dataTypeSpecific.className = GPBStringifySymbol(PUserBase),
        .fieldOptions = NULL,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[PUserBaseList class]
                                     rootClass:[AccountRoot class]
                                          file:AccountRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:sizeof(fields) / sizeof(GPBMessageFieldDescription)
                                        oneofs:NULL
                                    oneofCount:0
                                         enums:NULL
                                     enumCount:0
                                        ranges:NULL
                                    rangeCount:0
                                   storageSize:sizeof(PUserBaseList__storage_)
                                    wireFormat:NO];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - PPhoneMap

@implementation PPhoneMap

@dynamic list, list_Count;

typedef struct PPhoneMap__storage_ {
  uint32_t _has_storage_[1];
  NSMutableDictionary *list;
} PPhoneMap__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "list",
        .number = PPhoneMap_FieldNumber_List,
        .hasIndex = GPBNoHasBit,
        .flags = GPBFieldMapKeyString,
        .dataType = GPBDataTypeString,
        .offset = offsetof(PPhoneMap__storage_, list),
        .defaultValue.valueString = nil,
        .dataTypeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[PPhoneMap class]
                                     rootClass:[AccountRoot class]
                                          file:AccountRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:sizeof(fields) / sizeof(GPBMessageFieldDescription)
                                        oneofs:NULL
                                    oneofCount:0
                                         enums:NULL
                                     enumCount:0
                                        ranges:NULL
                                    rangeCount:0
                                   storageSize:sizeof(PPhoneMap__storage_)
                                    wireFormat:NO];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - PAccount

@implementation PAccount

@dynamic cellphone;
@dynamic wechat;
@dynamic weibo;
@dynamic facebook;
@dynamic google;

typedef struct PAccount__storage_ {
  uint32_t _has_storage_[1];
  BOOL cellphone;
  BOOL wechat;
  BOOL weibo;
  BOOL facebook;
  BOOL google;
} PAccount__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "cellphone",
        .number = PAccount_FieldNumber_Cellphone,
        .hasIndex = 0,
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeBool,
        .offset = offsetof(PAccount__storage_, cellphone),
        .defaultValue.valueBool = NO,
        .dataTypeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "wechat",
        .number = PAccount_FieldNumber_Wechat,
        .hasIndex = 1,
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeBool,
        .offset = offsetof(PAccount__storage_, wechat),
        .defaultValue.valueBool = NO,
        .dataTypeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "weibo",
        .number = PAccount_FieldNumber_Weibo,
        .hasIndex = 2,
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeBool,
        .offset = offsetof(PAccount__storage_, weibo),
        .defaultValue.valueBool = NO,
        .dataTypeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "facebook",
        .number = PAccount_FieldNumber_Facebook,
        .hasIndex = 3,
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeBool,
        .offset = offsetof(PAccount__storage_, facebook),
        .defaultValue.valueBool = NO,
        .dataTypeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "google",
        .number = PAccount_FieldNumber_Google,
        .hasIndex = 4,
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeBool,
        .offset = offsetof(PAccount__storage_, google),
        .defaultValue.valueBool = NO,
        .dataTypeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[PAccount class]
                                     rootClass:[AccountRoot class]
                                          file:AccountRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:sizeof(fields) / sizeof(GPBMessageFieldDescription)
                                        oneofs:NULL
                                    oneofCount:0
                                         enums:NULL
                                     enumCount:0
                                        ranges:NULL
                                    rangeCount:0
                                   storageSize:sizeof(PAccount__storage_)
                                    wireFormat:NO];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - PLevelInfo

@implementation PLevelInfo

@dynamic levelType;
@dynamic mapRight, mapRight_Count;

typedef struct PLevelInfo__storage_ {
  uint32_t _has_storage_[1];
  int32_t levelType;
  GPBStringBoolDictionary *mapRight;
} PLevelInfo__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "levelType",
        .number = PLevelInfo_FieldNumber_LevelType,
        .hasIndex = 0,
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeInt32,
        .offset = offsetof(PLevelInfo__storage_, levelType),
        .defaultValue.valueInt32 = 0,
        .dataTypeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "mapRight",
        .number = PLevelInfo_FieldNumber_MapRight,
        .hasIndex = GPBNoHasBit,
        .flags = GPBFieldMapKeyString | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeBool,
        .offset = offsetof(PLevelInfo__storage_, mapRight),
        .defaultValue.valueBool = NO,
        .dataTypeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
    };
#if GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    const char *extraTextFormatInfo = NULL;
#else
    static const char *extraTextFormatInfo = "\002\001\t\000\002\010\000";
#endif  // GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[PLevelInfo class]
                                     rootClass:[AccountRoot class]
                                          file:AccountRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:sizeof(fields) / sizeof(GPBMessageFieldDescription)
                                        oneofs:NULL
                                    oneofCount:0
                                         enums:NULL
                                     enumCount:0
                                        ranges:NULL
                                    rangeCount:0
                                   storageSize:sizeof(PLevelInfo__storage_)
                                    wireFormat:NO
                           extraTextFormatInfo:extraTextFormatInfo];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - PLevelInfoEx

@implementation PLevelInfoEx

@dynamic uuid;
@dynamic hasLevelInfo, levelInfo;

typedef struct PLevelInfoEx__storage_ {
  uint32_t _has_storage_[1];
  NSString *uuid;
  PLevelInfo *levelInfo;
} PLevelInfoEx__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "uuid",
        .number = PLevelInfoEx_FieldNumber_Uuid,
        .hasIndex = 0,
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
        .offset = offsetof(PLevelInfoEx__storage_, uuid),
        .defaultValue.valueString = nil,
        .dataTypeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "levelInfo",
        .number = PLevelInfoEx_FieldNumber_LevelInfo,
        .hasIndex = 1,
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeMessage,
        .offset = offsetof(PLevelInfoEx__storage_, levelInfo),
        .defaultValue.valueMessage = nil,
        .dataTypeSpecific.className = GPBStringifySymbol(PLevelInfo),
        .fieldOptions = NULL,
      },
    };
#if GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    const char *extraTextFormatInfo = NULL;
#else
    static const char *extraTextFormatInfo = "\001\002\t\000";
#endif  // GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[PLevelInfoEx class]
                                     rootClass:[AccountRoot class]
                                          file:AccountRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:sizeof(fields) / sizeof(GPBMessageFieldDescription)
                                        oneofs:NULL
                                    oneofCount:0
                                         enums:NULL
                                     enumCount:0
                                        ranges:NULL
                                    rangeCount:0
                                   storageSize:sizeof(PLevelInfoEx__storage_)
                                    wireFormat:NO
                           extraTextFormatInfo:extraTextFormatInfo];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - PLevelInfos

@implementation PLevelInfos

@dynamic listArray, listArray_Count;
@dynamic failUuidArray, failUuidArray_Count;

typedef struct PLevelInfos__storage_ {
  uint32_t _has_storage_[1];
  NSMutableArray *listArray;
  NSMutableArray *failUuidArray;
} PLevelInfos__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "listArray",
        .number = PLevelInfos_FieldNumber_ListArray,
        .hasIndex = GPBNoHasBit,
        .flags = GPBFieldRepeated,
        .dataType = GPBDataTypeMessage,
        .offset = offsetof(PLevelInfos__storage_, listArray),
        .defaultValue.valueMessage = nil,
        .dataTypeSpecific.className = GPBStringifySymbol(PLevelInfoEx),
        .fieldOptions = NULL,
      },
      {
        .name = "failUuidArray",
        .number = PLevelInfos_FieldNumber_FailUuidArray,
        .hasIndex = GPBNoHasBit,
        .flags = GPBFieldRepeated | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
        .offset = offsetof(PLevelInfos__storage_, failUuidArray),
        .defaultValue.valueMessage = nil,
        .dataTypeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
    };
#if GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    const char *extraTextFormatInfo = NULL;
#else
    static const char *extraTextFormatInfo = "\001\002\000failUuid\000";
#endif  // GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[PLevelInfos class]
                                     rootClass:[AccountRoot class]
                                          file:AccountRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:sizeof(fields) / sizeof(GPBMessageFieldDescription)
                                        oneofs:NULL
                                    oneofCount:0
                                         enums:NULL
                                     enumCount:0
                                        ranges:NULL
                                    rangeCount:0
                                   storageSize:sizeof(PLevelInfos__storage_)
                                    wireFormat:NO
                           extraTextFormatInfo:extraTextFormatInfo];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - PLiveRemind

@implementation PLiveRemind

@dynamic offOn;

typedef struct PLiveRemind__storage_ {
  uint32_t _has_storage_[1];
  BOOL offOn;
} PLiveRemind__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "offOn",
        .number = PLiveRemind_FieldNumber_OffOn,
        .hasIndex = 0,
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeBool,
        .offset = offsetof(PLiveRemind__storage_, offOn),
        .defaultValue.valueBool = NO,
        .dataTypeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
    };
#if GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    const char *extraTextFormatInfo = NULL;
#else
    static const char *extraTextFormatInfo = "\001\001\005\000";
#endif  // GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[PLiveRemind class]
                                     rootClass:[AccountRoot class]
                                          file:AccountRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:sizeof(fields) / sizeof(GPBMessageFieldDescription)
                                        oneofs:NULL
                                    oneofCount:0
                                         enums:NULL
                                     enumCount:0
                                        ranges:NULL
                                    rangeCount:0
                                   storageSize:sizeof(PLiveRemind__storage_)
                                    wireFormat:NO
                           extraTextFormatInfo:extraTextFormatInfo];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - PAccountInitInfo

@implementation PAccountInitInfo

@dynamic authStatus;
@dynamic cellphone;

typedef struct PAccountInitInfo__storage_ {
  uint32_t _has_storage_[1];
  int32_t authStatus;
  NSString *cellphone;
} PAccountInitInfo__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "authStatus",
        .number = PAccountInitInfo_FieldNumber_AuthStatus,
        .hasIndex = 0,
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeInt32,
        .offset = offsetof(PAccountInitInfo__storage_, authStatus),
        .defaultValue.valueInt32 = 0,
        .dataTypeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "cellphone",
        .number = PAccountInitInfo_FieldNumber_Cellphone,
        .hasIndex = 1,
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
        .offset = offsetof(PAccountInitInfo__storage_, cellphone),
        .defaultValue.valueString = nil,
        .dataTypeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
    };
#if GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    const char *extraTextFormatInfo = NULL;
#else
    static const char *extraTextFormatInfo = "\001\001\n\000";
#endif  // GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[PAccountInitInfo class]
                                     rootClass:[AccountRoot class]
                                          file:AccountRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:sizeof(fields) / sizeof(GPBMessageFieldDescription)
                                        oneofs:NULL
                                    oneofCount:0
                                         enums:NULL
                                     enumCount:0
                                        ranges:NULL
                                    rangeCount:0
                                   storageSize:sizeof(PAccountInitInfo__storage_)
                                    wireFormat:NO
                           extraTextFormatInfo:extraTextFormatInfo];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - PBackImage

@implementation PBackImage

@dynamic objectKey;
@dynamic uRL;

typedef struct PBackImage__storage_ {
  uint32_t _has_storage_[1];
  NSString *objectKey;
  NSString *uRL;
} PBackImage__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "objectKey",
        .number = PBackImage_FieldNumber_ObjectKey,
        .hasIndex = 0,
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
        .offset = offsetof(PBackImage__storage_, objectKey),
        .defaultValue.valueString = nil,
        .dataTypeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "uRL",
        .number = PBackImage_FieldNumber_URL,
        .hasIndex = 1,
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
        .offset = offsetof(PBackImage__storage_, uRL),
        .defaultValue.valueString = nil,
        .dataTypeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
    };
#if GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    const char *extraTextFormatInfo = NULL;
#else
    static const char *extraTextFormatInfo = "\002\001\t\000\002\001!!\000";
#endif  // GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[PBackImage class]
                                     rootClass:[AccountRoot class]
                                          file:AccountRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:sizeof(fields) / sizeof(GPBMessageFieldDescription)
                                        oneofs:NULL
                                    oneofCount:0
                                         enums:NULL
                                     enumCount:0
                                        ranges:NULL
                                    rangeCount:0
                                   storageSize:sizeof(PBackImage__storage_)
                                    wireFormat:NO
                           extraTextFormatInfo:extraTextFormatInfo];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - PBackThumbImageList

@implementation PBackThumbImageList

@dynamic listArray, listArray_Count;

typedef struct PBackThumbImageList__storage_ {
  uint32_t _has_storage_[1];
  NSMutableArray *listArray;
} PBackThumbImageList__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "listArray",
        .number = PBackThumbImageList_FieldNumber_ListArray,
        .hasIndex = GPBNoHasBit,
        .flags = GPBFieldRepeated,
        .dataType = GPBDataTypeMessage,
        .offset = offsetof(PBackThumbImageList__storage_, listArray),
        .defaultValue.valueMessage = nil,
        .dataTypeSpecific.className = GPBStringifySymbol(PBackImage),
        .fieldOptions = NULL,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[PBackThumbImageList class]
                                     rootClass:[AccountRoot class]
                                          file:AccountRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:sizeof(fields) / sizeof(GPBMessageFieldDescription)
                                        oneofs:NULL
                                    oneofCount:0
                                         enums:NULL
                                     enumCount:0
                                        ranges:NULL
                                    rangeCount:0
                                   storageSize:sizeof(PBackThumbImageList__storage_)
                                    wireFormat:NO];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - PReadNameAuthInfo

@implementation PReadNameAuthInfo

@dynamic uuid;
@dynamic authStatus;
@dynamic readName;
@dynamic birthday;
@dynamic idCardNo;
@dynamic idCardImg;
@dynamic authTime;

typedef struct PReadNameAuthInfo__storage_ {
  uint32_t _has_storage_[1];
  int32_t authStatus;
  int32_t authTime;
  NSString *uuid;
  NSString *readName;
  NSString *birthday;
  NSString *idCardNo;
  NSString *idCardImg;
} PReadNameAuthInfo__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "uuid",
        .number = PReadNameAuthInfo_FieldNumber_Uuid,
        .hasIndex = 0,
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
        .offset = offsetof(PReadNameAuthInfo__storage_, uuid),
        .defaultValue.valueString = nil,
        .dataTypeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "authStatus",
        .number = PReadNameAuthInfo_FieldNumber_AuthStatus,
        .hasIndex = 1,
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeInt32,
        .offset = offsetof(PReadNameAuthInfo__storage_, authStatus),
        .defaultValue.valueInt32 = 0,
        .dataTypeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "readName",
        .number = PReadNameAuthInfo_FieldNumber_ReadName,
        .hasIndex = 2,
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
        .offset = offsetof(PReadNameAuthInfo__storage_, readName),
        .defaultValue.valueString = nil,
        .dataTypeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "birthday",
        .number = PReadNameAuthInfo_FieldNumber_Birthday,
        .hasIndex = 3,
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
        .offset = offsetof(PReadNameAuthInfo__storage_, birthday),
        .defaultValue.valueString = nil,
        .dataTypeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "idCardNo",
        .number = PReadNameAuthInfo_FieldNumber_IdCardNo,
        .hasIndex = 4,
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
        .offset = offsetof(PReadNameAuthInfo__storage_, idCardNo),
        .defaultValue.valueString = nil,
        .dataTypeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "idCardImg",
        .number = PReadNameAuthInfo_FieldNumber_IdCardImg,
        .hasIndex = 5,
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
        .offset = offsetof(PReadNameAuthInfo__storage_, idCardImg),
        .defaultValue.valueString = nil,
        .dataTypeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "authTime",
        .number = PReadNameAuthInfo_FieldNumber_AuthTime,
        .hasIndex = 6,
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeInt32,
        .offset = offsetof(PReadNameAuthInfo__storage_, authTime),
        .defaultValue.valueInt32 = 0,
        .dataTypeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
    };
#if GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    const char *extraTextFormatInfo = NULL;
#else
    static const char *extraTextFormatInfo = "\005\002\n\000\003\010\000\005\010\000\006\t\000\007\010\000";
#endif  // GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[PReadNameAuthInfo class]
                                     rootClass:[AccountRoot class]
                                          file:AccountRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:sizeof(fields) / sizeof(GPBMessageFieldDescription)
                                        oneofs:NULL
                                    oneofCount:0
                                         enums:NULL
                                     enumCount:0
                                        ranges:NULL
                                    rangeCount:0
                                   storageSize:sizeof(PReadNameAuthInfo__storage_)
                                    wireFormat:NO
                           extraTextFormatInfo:extraTextFormatInfo];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - PReadNameAuthInfoList

@implementation PReadNameAuthInfoList

@dynamic listArray, listArray_Count;

typedef struct PReadNameAuthInfoList__storage_ {
  uint32_t _has_storage_[1];
  NSMutableArray *listArray;
} PReadNameAuthInfoList__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "listArray",
        .number = PReadNameAuthInfoList_FieldNumber_ListArray,
        .hasIndex = GPBNoHasBit,
        .flags = GPBFieldRepeated,
        .dataType = GPBDataTypeMessage,
        .offset = offsetof(PReadNameAuthInfoList__storage_, listArray),
        .defaultValue.valueMessage = nil,
        .dataTypeSpecific.className = GPBStringifySymbol(PReadNameAuthInfo),
        .fieldOptions = NULL,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[PReadNameAuthInfoList class]
                                     rootClass:[AccountRoot class]
                                          file:AccountRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:sizeof(fields) / sizeof(GPBMessageFieldDescription)
                                        oneofs:NULL
                                    oneofCount:0
                                         enums:NULL
                                     enumCount:0
                                        ranges:NULL
                                    rangeCount:0
                                   storageSize:sizeof(PReadNameAuthInfoList__storage_)
                                    wireFormat:NO];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - PReadNameAuthInfoCount

@implementation PReadNameAuthInfoCount

@dynamic count;

typedef struct PReadNameAuthInfoCount__storage_ {
  uint32_t _has_storage_[1];
  int64_t count;
} PReadNameAuthInfoCount__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "count",
        .number = PReadNameAuthInfoCount_FieldNumber_Count,
        .hasIndex = 0,
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt64,
        .offset = offsetof(PReadNameAuthInfoCount__storage_, count),
        .defaultValue.valueInt64 = 0LL,
        .dataTypeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[PReadNameAuthInfoCount class]
                                     rootClass:[AccountRoot class]
                                          file:AccountRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:sizeof(fields) / sizeof(GPBMessageFieldDescription)
                                        oneofs:NULL
                                    oneofCount:0
                                         enums:NULL
                                     enumCount:0
                                        ranges:NULL
                                    rangeCount:0
                                   storageSize:sizeof(PReadNameAuthInfoCount__storage_)
                                    wireFormat:NO];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - PPrivacyInfo

@implementation PPrivacyInfo

@dynamic myFans;
@dynamic myAttention;

typedef struct PPrivacyInfo__storage_ {
  uint32_t _has_storage_[1];
  BOOL myFans;
  BOOL myAttention;
} PPrivacyInfo__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "myFans",
        .number = PPrivacyInfo_FieldNumber_MyFans,
        .hasIndex = 0,
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeBool,
        .offset = offsetof(PPrivacyInfo__storage_, myFans),
        .defaultValue.valueBool = NO,
        .dataTypeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "myAttention",
        .number = PPrivacyInfo_FieldNumber_MyAttention,
        .hasIndex = 1,
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeBool,
        .offset = offsetof(PPrivacyInfo__storage_, myAttention),
        .defaultValue.valueBool = NO,
        .dataTypeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
    };
#if GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    const char *extraTextFormatInfo = NULL;
#else
    static const char *extraTextFormatInfo = "\002\001\006\000\002\013\000";
#endif  // GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[PPrivacyInfo class]
                                     rootClass:[AccountRoot class]
                                          file:AccountRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:sizeof(fields) / sizeof(GPBMessageFieldDescription)
                                        oneofs:NULL
                                    oneofCount:0
                                         enums:NULL
                                     enumCount:0
                                        ranges:NULL
                                    rangeCount:0
                                   storageSize:sizeof(PPrivacyInfo__storage_)
                                    wireFormat:NO
                           extraTextFormatInfo:extraTextFormatInfo];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - PLanguageInfo

@implementation PLanguageInfo

@dynamic language;

typedef struct PLanguageInfo__storage_ {
  uint32_t _has_storage_[1];
  NSString *language;
} PLanguageInfo__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "language",
        .number = PLanguageInfo_FieldNumber_Language,
        .hasIndex = 0,
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
        .offset = offsetof(PLanguageInfo__storage_, language),
        .defaultValue.valueString = nil,
        .dataTypeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[PLanguageInfo class]
                                     rootClass:[AccountRoot class]
                                          file:AccountRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:sizeof(fields) / sizeof(GPBMessageFieldDescription)
                                        oneofs:NULL
                                    oneofCount:0
                                         enums:NULL
                                     enumCount:0
                                        ranges:NULL
                                    rangeCount:0
                                   storageSize:sizeof(PLanguageInfo__storage_)
                                    wireFormat:NO];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - PLinkInfo

@implementation PLinkInfo

@dynamic type;
@dynamic uRL;

typedef struct PLinkInfo__storage_ {
  uint32_t _has_storage_[1];
  int32_t type;
  NSString *uRL;
} PLinkInfo__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "type",
        .number = PLinkInfo_FieldNumber_Type,
        .hasIndex = 0,
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt32,
        .offset = offsetof(PLinkInfo__storage_, type),
        .defaultValue.valueInt32 = 0,
        .dataTypeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "uRL",
        .number = PLinkInfo_FieldNumber_URL,
        .hasIndex = 1,
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
        .offset = offsetof(PLinkInfo__storage_, uRL),
        .defaultValue.valueString = nil,
        .dataTypeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
    };
#if GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    const char *extraTextFormatInfo = NULL;
#else
    static const char *extraTextFormatInfo = "\001\002\001!!\000";
#endif  // GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[PLinkInfo class]
                                     rootClass:[AccountRoot class]
                                          file:AccountRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:sizeof(fields) / sizeof(GPBMessageFieldDescription)
                                        oneofs:NULL
                                    oneofCount:0
                                         enums:NULL
                                     enumCount:0
                                        ranges:NULL
                                    rangeCount:0
                                   storageSize:sizeof(PLinkInfo__storage_)
                                    wireFormat:NO
                           extraTextFormatInfo:extraTextFormatInfo];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - PLinkInfoList

@implementation PLinkInfoList

@dynamic listArray, listArray_Count;

typedef struct PLinkInfoList__storage_ {
  uint32_t _has_storage_[1];
  NSMutableArray *listArray;
} PLinkInfoList__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "listArray",
        .number = PLinkInfoList_FieldNumber_ListArray,
        .hasIndex = GPBNoHasBit,
        .flags = GPBFieldRepeated,
        .dataType = GPBDataTypeMessage,
        .offset = offsetof(PLinkInfoList__storage_, listArray),
        .defaultValue.valueMessage = nil,
        .dataTypeSpecific.className = GPBStringifySymbol(PLinkInfo),
        .fieldOptions = NULL,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[PLinkInfoList class]
                                     rootClass:[AccountRoot class]
                                          file:AccountRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:sizeof(fields) / sizeof(GPBMessageFieldDescription)
                                        oneofs:NULL
                                    oneofCount:0
                                         enums:NULL
                                     enumCount:0
                                        ranges:NULL
                                    rangeCount:0
                                   storageSize:sizeof(PLinkInfoList__storage_)
                                    wireFormat:NO];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - PAccountNewsPersonInfo

@implementation PAccountNewsPersonInfo

@dynamic friendCnt;
@dynamic followCnt;
@dynamic fansCnt;
@dynamic textCnt;
@dynamic imageCnt;
@dynamic audioCnt;
@dynamic videoCnt;
@dynamic communityId;
@dynamic hasUser, user;
@dynamic followship;
@dynamic friend_p;
@dynamic hasLinkInfos, linkInfos;

typedef struct PAccountNewsPersonInfo__storage_ {
  uint32_t _has_storage_[1];
  BOOL friend_p;
  int32_t friendCnt;
  int32_t followCnt;
  int32_t fansCnt;
  int32_t textCnt;
  int32_t imageCnt;
  int32_t audioCnt;
  int32_t videoCnt;
  int32_t followship;
  NSString *communityId;
  PUser *user;
  PLinkInfoList *linkInfos;
} PAccountNewsPersonInfo__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "friendCnt",
        .number = PAccountNewsPersonInfo_FieldNumber_FriendCnt,
        .hasIndex = 0,
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeInt32,
        .offset = offsetof(PAccountNewsPersonInfo__storage_, friendCnt),
        .defaultValue.valueInt32 = 0,
        .dataTypeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "followCnt",
        .number = PAccountNewsPersonInfo_FieldNumber_FollowCnt,
        .hasIndex = 1,
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeInt32,
        .offset = offsetof(PAccountNewsPersonInfo__storage_, followCnt),
        .defaultValue.valueInt32 = 0,
        .dataTypeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "fansCnt",
        .number = PAccountNewsPersonInfo_FieldNumber_FansCnt,
        .hasIndex = 2,
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeInt32,
        .offset = offsetof(PAccountNewsPersonInfo__storage_, fansCnt),
        .defaultValue.valueInt32 = 0,
        .dataTypeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "textCnt",
        .number = PAccountNewsPersonInfo_FieldNumber_TextCnt,
        .hasIndex = 3,
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeInt32,
        .offset = offsetof(PAccountNewsPersonInfo__storage_, textCnt),
        .defaultValue.valueInt32 = 0,
        .dataTypeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "imageCnt",
        .number = PAccountNewsPersonInfo_FieldNumber_ImageCnt,
        .hasIndex = 4,
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeInt32,
        .offset = offsetof(PAccountNewsPersonInfo__storage_, imageCnt),
        .defaultValue.valueInt32 = 0,
        .dataTypeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "audioCnt",
        .number = PAccountNewsPersonInfo_FieldNumber_AudioCnt,
        .hasIndex = 5,
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeInt32,
        .offset = offsetof(PAccountNewsPersonInfo__storage_, audioCnt),
        .defaultValue.valueInt32 = 0,
        .dataTypeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "videoCnt",
        .number = PAccountNewsPersonInfo_FieldNumber_VideoCnt,
        .hasIndex = 6,
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeInt32,
        .offset = offsetof(PAccountNewsPersonInfo__storage_, videoCnt),
        .defaultValue.valueInt32 = 0,
        .dataTypeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "communityId",
        .number = PAccountNewsPersonInfo_FieldNumber_CommunityId,
        .hasIndex = 7,
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
        .offset = offsetof(PAccountNewsPersonInfo__storage_, communityId),
        .defaultValue.valueString = nil,
        .dataTypeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "user",
        .number = PAccountNewsPersonInfo_FieldNumber_User,
        .hasIndex = 8,
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeMessage,
        .offset = offsetof(PAccountNewsPersonInfo__storage_, user),
        .defaultValue.valueMessage = nil,
        .dataTypeSpecific.className = GPBStringifySymbol(PUser),
        .fieldOptions = NULL,
      },
      {
        .name = "followship",
        .number = PAccountNewsPersonInfo_FieldNumber_Followship,
        .hasIndex = 9,
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt32,
        .offset = offsetof(PAccountNewsPersonInfo__storage_, followship),
        .defaultValue.valueInt32 = 0,
        .dataTypeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "friend_p",
        .number = PAccountNewsPersonInfo_FieldNumber_Friend_p,
        .hasIndex = 10,
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeBool,
        .offset = offsetof(PAccountNewsPersonInfo__storage_, friend_p),
        .defaultValue.valueBool = NO,
        .dataTypeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "linkInfos",
        .number = PAccountNewsPersonInfo_FieldNumber_LinkInfos,
        .hasIndex = 11,
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeMessage,
        .offset = offsetof(PAccountNewsPersonInfo__storage_, linkInfos),
        .defaultValue.valueMessage = nil,
        .dataTypeSpecific.className = GPBStringifySymbol(PLinkInfoList),
        .fieldOptions = NULL,
      },
    };
#if GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    const char *extraTextFormatInfo = NULL;
#else
    static const char *extraTextFormatInfo = "\t\001\t\000\002\t\000\003\007\000\004\007\000\005\010\000\006\010\000\007\010\000\010JA\000\014\t\000";
#endif  // GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[PAccountNewsPersonInfo class]
                                     rootClass:[AccountRoot class]
                                          file:AccountRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:sizeof(fields) / sizeof(GPBMessageFieldDescription)
                                        oneofs:NULL
                                    oneofCount:0
                                         enums:NULL
                                     enumCount:0
                                        ranges:NULL
                                    rangeCount:0
                                   storageSize:sizeof(PAccountNewsPersonInfo__storage_)
                                    wireFormat:NO
                           extraTextFormatInfo:extraTextFormatInfo];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - PAccountChatPersonInfo

@implementation PAccountChatPersonInfo

@dynamic communityId;
@dynamic communityName;
@dynamic communityIcon;
@dynamic introduce;
@dynamic hasUser, user;

typedef struct PAccountChatPersonInfo__storage_ {
  uint32_t _has_storage_[1];
  NSString *communityId;
  NSString *communityName;
  NSString *communityIcon;
  NSString *introduce;
  PUser *user;
} PAccountChatPersonInfo__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "communityId",
        .number = PAccountChatPersonInfo_FieldNumber_CommunityId,
        .hasIndex = 0,
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
        .offset = offsetof(PAccountChatPersonInfo__storage_, communityId),
        .defaultValue.valueString = nil,
        .dataTypeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "communityName",
        .number = PAccountChatPersonInfo_FieldNumber_CommunityName,
        .hasIndex = 1,
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
        .offset = offsetof(PAccountChatPersonInfo__storage_, communityName),
        .defaultValue.valueString = nil,
        .dataTypeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "communityIcon",
        .number = PAccountChatPersonInfo_FieldNumber_CommunityIcon,
        .hasIndex = 2,
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
        .offset = offsetof(PAccountChatPersonInfo__storage_, communityIcon),
        .defaultValue.valueString = nil,
        .dataTypeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "introduce",
        .number = PAccountChatPersonInfo_FieldNumber_Introduce,
        .hasIndex = 3,
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
        .offset = offsetof(PAccountChatPersonInfo__storage_, introduce),
        .defaultValue.valueString = nil,
        .dataTypeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "user",
        .number = PAccountChatPersonInfo_FieldNumber_User,
        .hasIndex = 4,
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeMessage,
        .offset = offsetof(PAccountChatPersonInfo__storage_, user),
        .defaultValue.valueMessage = nil,
        .dataTypeSpecific.className = GPBStringifySymbol(PUser),
        .fieldOptions = NULL,
      },
    };
#if GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    const char *extraTextFormatInfo = NULL;
#else
    static const char *extraTextFormatInfo = "\004\001\013\000\002\r\000\003\r\000\004I\000";
#endif  // GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[PAccountChatPersonInfo class]
                                     rootClass:[AccountRoot class]
                                          file:AccountRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:sizeof(fields) / sizeof(GPBMessageFieldDescription)
                                        oneofs:NULL
                                    oneofCount:0
                                         enums:NULL
                                     enumCount:0
                                        ranges:NULL
                                    rangeCount:0
                                   storageSize:sizeof(PAccountChatPersonInfo__storage_)
                                    wireFormat:NO
                           extraTextFormatInfo:extraTextFormatInfo];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end


// @@protoc_insertion_point(global_scope)
